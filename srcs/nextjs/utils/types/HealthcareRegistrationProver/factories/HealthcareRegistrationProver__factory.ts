/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  HealthcareRegistrationProver,
  HealthcareRegistrationProverInterface,
} from "../HealthcareRegistrationProver";

const _abi = [
  {
    type: "function",
    name: "proof",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "proveOrganizationDomain",
    inputs: [
      {
        name: "unverifiedEmail",
        type: "tuple",
        internalType: "struct UnverifiedEmail",
        components: [
          {
            name: "email",
            type: "string",
            internalType: "string",
          },
          {
            name: "dnsRecord",
            type: "tuple",
            internalType: "struct DnsRecord",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "recordType",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "data",
                type: "string",
                internalType: "string",
              },
              {
                name: "ttl",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "verificationData",
            type: "tuple",
            internalType: "struct VerificationData",
            components: [
              {
                name: "validUntil",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "pubKey",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct HealthcareRegistrationProver.RegistrationData",
        components: [
          {
            name: "requestedRole",
            type: "uint8",
            internalType: "enum HealthcareRegistrationProver.UserType",
          },
          {
            name: "walletAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "domain",
            type: "string",
            internalType: "string",
          },
          {
            name: "organizationName",
            type: "string",
            internalType: "string",
          },
          {
            name: "emailHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "provePatientEmail",
    inputs: [
      {
        name: "unverifiedEmail",
        type: "tuple",
        internalType: "struct UnverifiedEmail",
        components: [
          {
            name: "email",
            type: "string",
            internalType: "string",
          },
          {
            name: "dnsRecord",
            type: "tuple",
            internalType: "struct DnsRecord",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "recordType",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "data",
                type: "string",
                internalType: "string",
              },
              {
                name: "ttl",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "verificationData",
            type: "tuple",
            internalType: "struct VerificationData",
            components: [
              {
                name: "validUntil",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "pubKey",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct HealthcareRegistrationProver.RegistrationData",
        components: [
          {
            name: "requestedRole",
            type: "uint8",
            internalType: "enum HealthcareRegistrationProver.UserType",
          },
          {
            name: "walletAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "domain",
            type: "string",
            internalType: "string",
          },
          {
            name: "organizationName",
            type: "string",
            internalType: "string",
          },
          {
            name: "emailHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setBlock",
    inputs: [
      {
        name: "blockNo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setChain",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "blockNo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stringToAddress",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50612d1a8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806315706fdf14610064578063504dcdb51461009457806387cea3ae146100c5578063c0a288c7146100e1578063faf924cf14610112578063ffbc563814610130575b5f5ffd5b61007e60048036038101906100799190611555565b61014c565b60405161008b91906115db565b60405180910390f35b6100ae60048036038101906100a99190611616565b6102e9565b6040516100bc9291906119fe565b60405180910390f35b6100df60048036038101906100da9190611a58565b6104a3565b005b6100fb60048036038101906100f69190611616565b610580565b6040516101099291906119fe565b60405180910390f35b61011a6108d9565b6040516101279190611a83565b60405180910390f35b61014a60048036038101906101459190611a9d565b6108ee565b005b5f5f829050602a815114610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c90611b35565b60405180910390fd5b5f601467ffffffffffffffff8111156101b1576101b0611431565b5b6040519080825280601f01601f1916602001820160405280156101e35781602001600182028036833780820191505090505b5090505f5f90505b60148110156102d2575f61023284600280856102079190611b80565b6102119190611bc1565b8151811061022257610221611bf4565b5b602001015160f81c60f81b6109ce565b90505f6102738560036002866102489190611b80565b6102529190611bc1565b8151811061026357610262611bf4565b5b602001015160f81c60f81b6109ce565b90508060048360ff16901b1760f81b84848151811061029557610294611bf4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350505080806001019150506101eb565b50806102dd90611c85565b60601c92505050919050565b6102f1611282565b6102f96112b4565b5f61030c8461030790611fff565b610c08565b90505f61033e604051806060016040528060338152602001612cb2603391398360400151610f5d90919063ffffffff16565b90506002815114610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90612081565b60405180910390fd5b5f6103a98260018151811061039c5761039b611bf4565b5b602002602001015161014c565b90505f6002845f01516040516020016103c291906120d9565b6040516020818303038152906040526040516103de9190612129565b602060405180830381855afa1580156103f9573d5f5f3e3d5ffd5b5050506040513d601f19601f8201168201806040525081019061041c9190612169565b90505f6040518060a001604052805f600281111561043d5761043c611745565b5b81526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052805f815250815260200160405180602001604052805f81525081526020018381525090506104946108d9565b81965096505050505050915091565b7f2ae215ce9fde588adfdea92976dc9aa45aa006a0f63942d8f9f21bd4537972a35f1c73ffffffffffffffffffffffffffffffffffffffff166387cea3ae826040518263ffffffff1660e01b81526004016104fe91906121a3565b6020604051808303815f875af115801561051a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053e91906121f1565b61057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490612266565b60405180910390fd5b50565b610588611282565b6105906112b4565b5f6105a38461059e90611fff565b610c08565b90505f6105d4604051806060016040528060278152602001612c8b60279139835f0151610f5d90919063ffffffff16565b9050600281511461061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906122ce565b60405180910390fd5b5f8160018151811061062f5761062e611bf4565b5b602002602001015190505f6106696040518060a0016040528060658152602001612c26606591398560400151610f5d90919063ffffffff16565b905060048151146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690612336565b60405180910390fd5b5f816001815181106106c4576106c3611bf4565b5b602002602001015190505f826002815181106106e3576106e2611bf4565b5b602002602001015190505f6107128460038151811061070557610704611bf4565b5b602002602001015161014c565b90505f61075d6040518060400160405280600881526020017f484f53504954414c0000000000000000000000000000000000000000000000008152508461104490919063ffffffff16565b1561076b57600190506107fd565b6107b36040518060400160405280600781526020017f494e5355524552000000000000000000000000000000000000000000000000008152508461104490919063ffffffff16565b156107c157600290506107fc565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f39061239e565b60405180910390fd5b5b5f6040518060a0016040528083600281111561081c5761081b611745565b5b81526020018473ffffffffffffffffffffffffffffffffffffffff16815260200188815260200186815260200160028b5f015160405160200161085f91906120d9565b60405160208183030381529060405260405161087b9190612129565b602060405180830381855afa158015610896573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906108b99190612169565b81525090506108c66108d9565b819a509a50505050505050505050915091565b6108e1611282565b6108e961106b565b905090565b7f2ae215ce9fde588adfdea92976dc9aa45aa006a0f63942d8f9f21bd4537972a35f1c73ffffffffffffffffffffffffffffffffffffffff1663ffbc563883836040518363ffffffff1660e01b815260040161094b9291906123bc565b6020604051808303815f875af1158015610967573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098b91906121f1565b6109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190612266565b60405180910390fd5b5050565b5f5f8260f81c90507f300000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1610158015610a3857507f390000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1611155b15610a74577f300000000000000000000000000000000000000000000000000000000000000060f81c81610a6c91906123e3565b915050610c03565b7f610000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1610158015610ad657507f660000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1611155b15610b1e577f610000000000000000000000000000000000000000000000000000000000000060f81c81600a610b0c9190612417565b610b1691906123e3565b915050610c03565b7f410000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1610158015610b8057507f460000000000000000000000000000000000000000000000000000000000000060f81c60ff168160ff1611155b15610bc8577f410000000000000000000000000000000000000000000000000000000000000060f81c81600a610bb69190612417565b610bc091906123e3565b915050610c03565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfa90612495565b60405180910390fd5b919050565b610c10611308565b4282604001515f015167ffffffffffffffff1611610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90612523565b60405180910390fd5b610c6b611082565b15610ce8577fc16646301c7615357b8f8ee125956b0e5fbf972fa2a0c26feb1f1ae75d04103f5f1b8260400151604001518051906020012014610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda9061258b565b60405180910390fd5b610e88565b610cf061109f565b15610dc057610cfd611107565b73ffffffffffffffffffffffffffffffffffffffff166381e4c9a38360400151604001516040518263ffffffff1660e01b8152600401610d3d91906125f1565b602060405180830381865afa158015610d58573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d7c91906121f1565b610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db29061265b565b60405180910390fd5b610e87565b610dc8611122565b73ffffffffffffffffffffffffffffffffffffffff166381e4c9a38360400151604001516040518263ffffffff1660e01b8152600401610e0891906125f1565b602060405180830381865afa158015610e23573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4791906121f1565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d9061265b565b60405180910390fd5b5b5b5f5f600173f4e4fdca9d5d55e64525e314391996a15f7ec600610eab9190612679565b73ffffffffffffffffffffffffffffffffffffffff1684604051602001610ed2919061283c565b604051602081830303815290604052604051610eee9190612129565b5f60405180830381855afa9150503d805f8114610f26576040519150601f19603f3d011682016040523d82523d5f602084013e610f2b565b606091505b5091509150610f3a828261113d565b505f81806020019051810190610f5091906129af565b9050809350505050919050565b60605f5f601173f4e4fdca9d5d55e64525e314391996a15f7ec600610f829190612679565b73ffffffffffffffffffffffffffffffffffffffff16604051806040016040528087815260200186815250604051602001610fbd9190612aa5565b604051602081830303815290604052604051610fd99190612129565b5f60405180830381855afa9150503d805f8114611011576040519150601f19603f3d011682016040523d82523d5f602084013e611016565b606091505b5091509150611025828261113d565b508080602001905181019061103a9190612ba7565b9250505092915050565b5f81518351148015611063575081805190602001208380519060200120145b905092915050565b611073611282565b61107b611282565b8091505090565b5f61108b611161565b8061109a5750611099611179565b5b905090565b5f60014614806110af5750600a46145b806110ba5750608946145b806110c6575061014446145b806110d257506101e046145b806110de575061210546145b806110ea575061a4b146145b806110f6575061a4ba46145b80611102575061e70846145b905090565b5f73565dca92902ea0ca597b5e62df0b47886b6b7d4d905090565b5f73c4e4dc291a5c4debe9ff5a3372f3fdd2e42bac86905090565b6060826111525761114d8261123e565b61115a565b81905061115b565b5b92915050565b5f617a6946148061117457506204991946145b905090565b5f5f5f601e73f4e4fdca9d5d55e64525e314391996a15f7ec60061119d9190612679565b73ffffffffffffffffffffffffffffffffffffffff166040516111bf90612c11565b5f60405180830381855afa9150503d805f81146111f7576040519150601f19603f3d011682016040523d82523d5f602084013e6111fc565b606091505b509150915081158061120e57505f8151145b1561121d575f9250505061123b565b5f8180602001905181019061123291906121f1565b90508093505050505b90565b5f815111156112505780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060800160405280611295611330565b81526020015f81526020015f81526020016112ae611386565b81525090565b6040518060a001604052805f60028111156112d2576112d1611745565b5b81526020015f73ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020015f81525090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b60405180606001604052805f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016113686113e5565b81526020015f60018111156113805761137f611745565b5b81525090565b6040518060a001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020015f81526020015f81526020015f81525090565b604051806101000160405280600890602082028036833780820191505090505090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61146782611421565b810181811067ffffffffffffffff8211171561148657611485611431565b5b80604052505050565b5f611498611408565b90506114a4828261145e565b919050565b5f67ffffffffffffffff8211156114c3576114c2611431565b5b6114cc82611421565b9050602081019050919050565b828183375f83830152505050565b5f6114f96114f4846114a9565b61148f565b9050828152602081018484840111156115155761151461141d565b5b6115208482856114d9565b509392505050565b5f82601f83011261153c5761153b611419565b5b813561154c8482602086016114e7565b91505092915050565b5f6020828403121561156a57611569611411565b5b5f82013567ffffffffffffffff81111561158757611586611415565b5b61159384828501611528565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115c58261159c565b9050919050565b6115d5816115bb565b82525050565b5f6020820190506115ee5f8301846115cc565b92915050565b5f5ffd5b5f6060828403121561160d5761160c6115f4565b5b81905092915050565b5f6020828403121561162b5761162a611411565b5b5f82013567ffffffffffffffff81111561164857611647611415565b5b611654848285016115f8565b91505092915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116918161165d565b82525050565b5f60089050919050565b5f81905092915050565b5f819050919050565b5f819050919050565b6116c6816116b4565b82525050565b5f6116d783836116bd565b60208301905092915050565b5f602082019050919050565b6116f881611697565b61170281846116a1565b925061170d826116ab565b805f5b8381101561173d57815161172487826116cc565b965061172f836116e3565b925050600181019050611710565b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6002811061178357611782611745565b5b50565b5f81905061179382611772565b919050565b5f6117a282611786565b9050919050565b6117b281611798565b82525050565b61014082015f8201516117cd5f850182611688565b5060208201516117e060208501826116ef565b5060408201516117f46101208501826117a9565b50505050565b5f819050919050565b61180c816117fa565b82525050565b61181b816115bb565b82525050565b60a082015f8201516118355f850182611812565b5060208201516118486020850182611688565b50604082015161185b6040850182611803565b50606082015161186e6060850182611803565b50608082015161188160808501826116bd565b50505050565b61022082015f82015161189c5f8501826117b8565b5060208201516118b06101408501826116bd565b5060408201516118c4610160850182611803565b5060608201516118d8610180850182611821565b50505050565b600381106118ef576118ee611745565b5b50565b5f8190506118ff826118de565b919050565b5f61190e826118f2565b9050919050565b61191e81611904565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61195682611924565b611960818561192e565b935061197081856020860161193e565b61197981611421565b840191505092915050565b5f60a083015f8301516119995f860182611915565b5060208301516119ac6020860182611812565b50604083015184820360408601526119c4828261194c565b915050606083015184820360608601526119de828261194c565b91505060808301516119f360808601826116bd565b508091505092915050565b5f61024082019050611a125f830185611887565b818103610220830152611a258184611984565b90509392505050565b611a37816117fa565b8114611a41575f5ffd5b50565b5f81359050611a5281611a2e565b92915050565b5f60208284031215611a6d57611a6c611411565b5b5f611a7a84828501611a44565b91505092915050565b5f61022082019050611a975f830184611887565b92915050565b5f5f60408385031215611ab357611ab2611411565b5b5f611ac085828601611a44565b9250506020611ad185828601611a44565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c69642061646472657373206c656e677468000000000000000000005f82015250565b5f611b1f601683611adb565b9150611b2a82611aeb565b602082019050919050565b5f6020820190508181035f830152611b4c81611b13565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b8a826117fa565b9150611b95836117fa565b9250828202611ba3816117fa565b91508282048414831517611bba57611bb9611b53565b5b5092915050565b5f611bcb826117fa565b9150611bd6836117fa565b9250828201905080821115611bee57611bed611b53565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f611c708251611c3a565b80915050919050565b5f82821b905092915050565b5f611c8f82611c21565b82611c9984611c2b565b9050611ca481611c65565b92506014821015611ce457611cdf7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611c79565b831692505b5050919050565b5f5ffd5b5f5ffd5b5f60ff82169050919050565b611d0881611cf3565b8114611d12575f5ffd5b50565b5f81359050611d2381611cff565b92915050565b5f67ffffffffffffffff82169050919050565b611d4581611d29565b8114611d4f575f5ffd5b50565b5f81359050611d6081611d3c565b92915050565b5f60808284031215611d7b57611d7a611ceb565b5b611d85608061148f565b90505f82013567ffffffffffffffff811115611da457611da3611cef565b5b611db084828501611528565b5f830152506020611dc384828501611d15565b602083015250604082013567ffffffffffffffff811115611de757611de6611cef565b5b611df384828501611528565b6040830152506060611e0784828501611d52565b60608301525092915050565b5f67ffffffffffffffff821115611e2d57611e2c611431565b5b611e3682611421565b9050602081019050919050565b5f611e55611e5084611e13565b61148f565b905082815260208101848484011115611e7157611e7061141d565b5b611e7c8482856114d9565b509392505050565b5f82601f830112611e9857611e97611419565b5b8135611ea8848260208601611e43565b91505092915050565b5f60608284031215611ec657611ec5611ceb565b5b611ed0606061148f565b90505f611edf84828501611d52565b5f83015250602082013567ffffffffffffffff811115611f0257611f01611cef565b5b611f0e84828501611e84565b602083015250604082013567ffffffffffffffff811115611f3257611f31611cef565b5b611f3e84828501611e84565b60408301525092915050565b5f60608284031215611f5f57611f5e611ceb565b5b611f69606061148f565b90505f82013567ffffffffffffffff811115611f8857611f87611cef565b5b611f9484828501611528565b5f83015250602082013567ffffffffffffffff811115611fb757611fb6611cef565b5b611fc384828501611d66565b602083015250604082013567ffffffffffffffff811115611fe757611fe6611cef565b5b611ff384828501611eb1565b60408301525092915050565b5f61200a3683611f4a565b9050919050565b7f496e76616c69642070617469656e7420726567697374726174696f6e20666f725f8201527f6d61740000000000000000000000000000000000000000000000000000000000602082015250565b5f61206b602383611adb565b915061207682612011565b604082019050919050565b5f6020820190508181035f8301526120988161205f565b9050919050565b5f81905092915050565b5f6120b382611924565b6120bd818561209f565b93506120cd81856020860161193e565b80840191505092915050565b5f6120e482846120a9565b915081905092915050565b5f81905092915050565b5f61210382611c21565b61210d81856120ef565b935061211d81856020860161193e565b80840191505092915050565b5f61213482846120f9565b915081905092915050565b612148816116b4565b8114612152575f5ffd5b50565b5f815190506121638161213f565b92915050565b5f6020828403121561217e5761217d611411565b5b5f61218b84828501612155565b91505092915050565b61219d816117fa565b82525050565b5f6020820190506121b65f830184612194565b92915050565b5f8115159050919050565b6121d0816121bc565b81146121da575f5ffd5b50565b5f815190506121eb816121c7565b92915050565b5f6020828403121561220657612205611411565b5b5f612213848285016121dd565b91505092915050565b7f4661696c6564206368656174636f646520696e766f636174696f6e00000000005f82015250565b5f612250601b83611adb565b915061225b8261221c565b602082019050919050565b5f6020820190508181035f83015261227d81612244565b9050919050565b7f496e76616c696420656d61696c20666f726d61740000000000000000000000005f82015250565b5f6122b8601483611adb565b91506122c382612284565b602082019050919050565b5f6020820190508181035f8301526122e5816122ac565b9050919050565b7f496e76616c696420726567697374726174696f6e20666f726d617400000000005f82015250565b5f612320601b83611adb565b915061232b826122ec565b602082019050919050565b5f6020820190508181035f83015261234d81612314565b9050919050565b7f496e76616c696420726f6c6520747970650000000000000000000000000000005f82015250565b5f612388601183611adb565b915061239382612354565b602082019050919050565b5f6020820190508181035f8301526123b58161237c565b9050919050565b5f6040820190506123cf5f830185612194565b6123dc6020830184612194565b9392505050565b5f6123ed82611cf3565b91506123f883611cf3565b9250828203905060ff81111561241157612410611b53565b5b92915050565b5f61242182611cf3565b915061242c83611cf3565b9250828201905060ff81111561244557612444611b53565b5b92915050565b7f496e76616c6964206865782063686172616374657200000000000000000000005f82015250565b5f61247f601583611adb565b915061248a8261244b565b602082019050919050565b5f6020820190508181035f8301526124ac81612473565b9050919050565b7f456d61696c50726f6f663a206578706972656420444e532076657269666963615f8201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b5f61250d602483611adb565b9150612518826124b3565b604082019050919050565b5f6020820190508181035f83015261253a81612501565b9050919050565b7f4e6f7420612076616c69642056444e532068617264636f646564206b657900005f82015250565b5f612575601e83611adb565b915061258082612541565b602082019050919050565b5f6020820190508181035f8301526125a281612569565b9050919050565b5f82825260208201905092915050565b5f6125c382611c21565b6125cd81856125a9565b93506125dd81856020860161193e565b6125e681611421565b840191505092915050565b5f6020820190508181035f83015261260981846125b9565b905092915050565b7f4e6f7420612076616c69642056444e53207075626c6963206b657900000000005f82015250565b5f612645601b83611adb565b915061265082612611565b602082019050919050565b5f6020820190508181035f83015261267281612639565b9050919050565b5f6126838261159c565b915061268e8361159c565b9250828201905073ffffffffffffffffffffffffffffffffffffffff8111156126ba576126b9611b53565b5b92915050565b6126c981611cf3565b82525050565b6126d881611d29565b82525050565b5f608083015f8301518482035f8601526126f8828261194c565b915050602083015161270d60208601826126c0565b5060408301518482036040860152612725828261194c565b915050606083015161273a60608601826126cf565b508091505092915050565b5f82825260208201905092915050565b5f61275f82611c21565b6127698185612745565b935061277981856020860161193e565b61278281611421565b840191505092915050565b5f606083015f8301516127a25f8601826126cf565b50602083015184820360208601526127ba8282612755565b915050604083015184820360408601526127d48282612755565b9150508091505092915050565b5f606083015f8301518482035f8601526127fb828261194c565b9150506020830151848203602086015261281582826126de565b9150506040830151848203604086015261282f828261278d565b9150508091505092915050565b5f6020820190508181035f83015261285481846127e1565b905092915050565b5f61286e612869846114a9565b61148f565b90508281526020810184848401111561288a5761288961141d565b5b61289584828561193e565b509392505050565b5f82601f8301126128b1576128b0611419565b5b81516128c184826020860161285c565b91505092915050565b5f608082840312156128df576128de611ceb565b5b6128e9608061148f565b90505f82015167ffffffffffffffff81111561290857612907611cef565b5b6129148482850161289d565b5f83015250602082015167ffffffffffffffff81111561293757612936611cef565b5b6129438482850161289d565b602083015250604082015167ffffffffffffffff81111561296757612966611cef565b5b6129738482850161289d565b604083015250606082015167ffffffffffffffff81111561299757612996611cef565b5b6129a38482850161289d565b60608301525092915050565b5f602082840312156129c4576129c3611411565b5b5f82015167ffffffffffffffff8111156129e1576129e0611415565b5b6129ed848285016128ca565b91505092915050565b5f60029050919050565b5f81905092915050565b5f819050919050565b5f612a1e838361194c565b905092915050565b5f602082019050919050565b5f612a3c826129f6565b612a468185612a00565b935083602082028501612a5885612a0a565b805f5b85811015612a935784840389528151612a748582612a13565b9450612a7f83612a26565b925060208a01995050600181019050612a5b565b50829750879550505050505092915050565b5f6020820190508181035f830152612abd8184612a32565b905092915050565b5f67ffffffffffffffff821115612adf57612ade611431565b5b602082029050602081019050919050565b5f5ffd5b5f612b06612b0184612ac5565b61148f565b90508083825260208201905060208402830185811115612b2957612b28612af0565b5b835b81811015612b7057805167ffffffffffffffff811115612b4e57612b4d611419565b5b808601612b5b898261289d565b85526020850194505050602081019050612b2b565b5050509392505050565b5f82601f830112612b8e57612b8d611419565b5b8151612b9e848260208601612af4565b91505092915050565b5f60208284031215612bbc57612bbb611411565b5b5f82015167ffffffffffffffff811115612bd957612bd8611415565b5b612be584828501612b7a565b91505092915050565b50565b5f612bfc5f836120ef565b9150612c0782612bee565b5f82019050919050565b5f612c1b82612bf1565b915081905091905056fe5e5265676973746572206f7267616e697a6174696f6e20285b5e5c735d2b283f3a5c732b5b5e5c735d2b292a292061732028484f53504954414c7c494e53555245522920776974682077616c6c65743a202830785b612d66412d46302d395d7b34307d29245e5b5c772e2d5d2b40285b612d7a412d5a5c642e2d5d2b5c2e5b612d7a412d5a5d7b322c7d29245e52656769737465722070617469656e7420776974682077616c6c65743a202830785b612d66412d46302d395d7b34307d2924a26469706673582212208bdd9cf5c0c49c666bdd69ee8e8576365cbed1be4cc2b0e4b1c80d9b396bafe864736f6c634300081c0033";

type HealthcareRegistrationProverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthcareRegistrationProverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthcareRegistrationProver__factory extends ContractFactory {
  constructor(...args: HealthcareRegistrationProverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HealthcareRegistrationProver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HealthcareRegistrationProver__factory {
    return super.connect(runner) as HealthcareRegistrationProver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthcareRegistrationProverInterface {
    return new Interface(_abi) as HealthcareRegistrationProverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HealthcareRegistrationProver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HealthcareRegistrationProver;
  }
}
