/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  HealthcareRegistrationProver,
  HealthcareRegistrationProverInterface,
} from "../HealthcareRegistrationProver";

const _abi = [
  {
    type: "function",
    name: "proof",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "proveOrganizationDomain",
    inputs: [
      {
        name: "unverifiedEmail",
        type: "tuple",
        internalType: "struct UnverifiedEmail",
        components: [
          {
            name: "email",
            type: "string",
            internalType: "string",
          },
          {
            name: "dnsRecord",
            type: "tuple",
            internalType: "struct DnsRecord",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "recordType",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "data",
                type: "string",
                internalType: "string",
              },
              {
                name: "ttl",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "verificationData",
            type: "tuple",
            internalType: "struct VerificationData",
            components: [
              {
                name: "validUntil",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "pubKey",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct HealthcareRegistrationProver.RegistrationData",
        components: [
          {
            name: "requestedRole",
            type: "uint8",
            internalType: "enum HealthcareRegistrationProver.UserType",
          },
          {
            name: "walletAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "domain",
            type: "string",
            internalType: "string",
          },
          {
            name: "organizationName",
            type: "string",
            internalType: "string",
          },
          {
            name: "emailHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "provePatientEmail",
    inputs: [
      {
        name: "unverifiedEmail",
        type: "tuple",
        internalType: "struct UnverifiedEmail",
        components: [
          {
            name: "email",
            type: "string",
            internalType: "string",
          },
          {
            name: "dnsRecord",
            type: "tuple",
            internalType: "struct DnsRecord",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "recordType",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "data",
                type: "string",
                internalType: "string",
              },
              {
                name: "ttl",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "verificationData",
            type: "tuple",
            internalType: "struct VerificationData",
            components: [
              {
                name: "validUntil",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "pubKey",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Proof",
        components: [
          {
            name: "seal",
            type: "tuple",
            internalType: "struct Seal",
            components: [
              {
                name: "verifierSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "seal",
                type: "bytes32[8]",
                internalType: "bytes32[8]",
              },
              {
                name: "mode",
                type: "uint8",
                internalType: "enum ProofMode",
              },
            ],
          },
          {
            name: "callGuestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "length",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callAssumptions",
            type: "tuple",
            internalType: "struct CallAssumptions",
            components: [
              {
                name: "proverContractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "settleChainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockNumber",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "settleBlockHash",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct HealthcareRegistrationProver.RegistrationData",
        components: [
          {
            name: "requestedRole",
            type: "uint8",
            internalType: "enum HealthcareRegistrationProver.UserType",
          },
          {
            name: "walletAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "domain",
            type: "string",
            internalType: "string",
          },
          {
            name: "organizationName",
            type: "string",
            internalType: "string",
          },
          {
            name: "emailHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setBlock",
    inputs: [
      {
        name: "blockNo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setChain",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "blockNo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stringToAddress",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50611ae88061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806315706fdf14610064578063504dcdb51461009457806387cea3ae146100b5578063c0a288c7146100ca578063faf924cf146100dd578063ffbc5638146100f2575b5f5ffd5b610077610072366004611183565b610105565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a76100a23660046111b4565b610235565b60405161008b9291906112e6565b6100c86100c3366004611379565b61041d565b005b6100a76100d83660046111b4565b6104df565b6100e5610808565b60405161008b9190611390565b6100c861010036600461139f565b61081d565b80515f908290602a146101585760405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840c2c8c8e4cae6e640d8cadccee8d60531b60448201526064015b60405180910390fd5b6040805160148082528183019092525f916020820181803683370190505090505f5b6014811015610220575f6101c2846101938460026113d3565b61019e9060026113ea565b815181106101ae576101ae6113fd565b01602001516001600160f81b0319166108ea565b90505f6101df856101d48560026113d3565b61019e9060036113ea565b90508060048360ff16901b1760f81b848481518110610200576102006113fd565b60200101906001600160f81b03191690815f1a905350505060010161017a565b5061022a81611411565b60601c949350505050565b61023d610fce565b6102766040805160a08101909152805f81526020015f6001600160a01b0316815260200160608152602001606081526020015f81525090565b5f610288610283856114f9565b6109ba565b90505f6102b2604051806060016040528060338152602001611a8060339139604084015190610d3f565b905080516002146103115760405162461bcd60e51b815260206004820152602360248201527f496e76616c69642070617469656e7420726567697374726174696f6e20666f726044820152621b585d60ea1b606482015260840161014f565b5f61033582600181518110610328576103286113fd565b6020026020010151610105565b90505f6002845f015160405160200161034e919061161f565b60408051601f19818403018152908290526103689161161f565b602060405180830381855afa158015610383573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906103a6919061162a565b90505f6040518060a001604052805f60028111156103c6576103c66111ea565b8152602001846001600160a01b0316815260200160405180602001604052805f815250815260200160405180602001604052805f8152508152602001838152509050610410610808565b9890975095505050505050565b6040516343e751d760e11b8152600481018290527376dc9aa45aa006a0f63942d8f9f21bd4537972a3906387cea3ae906024016020604051808303815f875af115801561046c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104909190611641565b6104dc5760405162461bcd60e51b815260206004820152601b60248201527f4661696c6564206368656174636f646520696e766f636174696f6e0000000000604482015260640161014f565b50565b6104e7610fce565b6105206040805160a08101909152805f81526020015f6001600160a01b0316815260200160608152602001606081526020015f81525090565b5f61052d610283856114f9565b90505f610554604051806060016040528060278152602001611a5960279139835190610d3f565b9050805160021461059e5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a5908195b585a5b08199bdc9b585d60621b604482015260640161014f565b5f816001815181106105b2576105b26113fd565b602002602001015190505f6105e46040518060a00160405280606581526020016119f460659139604086015190610d3f565b905080516004146106375760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420726567697374726174696f6e20666f726d61740000000000604482015260640161014f565b5f8160018151811061064b5761064b6113fd565b602002602001015190505f82600281518110610669576106696113fd565b602002602001015190505f61068a84600381518110610328576103286113fd565b90505f6106c0604051806040016040528060088152602001671213d4d41255105360c21b81525084610e1690919063ffffffff16565b156106cd5750600161073f565b60408051808201909152600781526624a729aaa922a960c91b60208201526106f6908490610e16565b156107035750600261073f565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726f6c65207479706560781b604482015260640161014f565b5f6040518060a0016040528083600281111561075d5761075d6111ea565b8152602001846001600160a01b0316815260200188815260200186815260200160028b5f0151604051602001610793919061161f565b60408051601f19818403018152908290526107ad9161161f565b602060405180830381855afa1580156107c8573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906107eb919061162a565b905290506107f7610808565b9c909b509950505050505050505050565b610810610fce565b610818610e3b565b905090565b60405160016208753960e31b0319815260048101839052602481018290527376dc9aa45aa006a0f63942d8f9f21bd4537972a39063ffbc5638906044016020604051808303815f875af1158015610876573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089a9190611641565b6108e65760405162461bcd60e51b815260206004820152601b60248201527f4661696c6564206368656174636f646520696e766f636174696f6e0000000000604482015260640161014f565b5050565b5f60f882901c603081108015906109055750603960ff821611155b1561091c57610915603082611660565b9392505050565b606160ff8216108015906109345750606660ff821611155b1561095057606161094682600a611679565b6109159190611660565b604160ff8216108015906109685750604660ff821611155b1561097a57604161094682600a611679565b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2103432bc1031b430b930b1ba32b960591b604482015260640161014f565b6109e56040518060800160405280606081526020016060815260200160608152602001606081525090565b4282604001515f01516001600160401b031611610a505760405162461bcd60e51b8152602060048201526024808201527f456d61696c50726f6f663a206578706972656420444e532076657269666963616044820152633a34b7b760e11b606482015260840161014f565b610a58610e50565b15610ae057604080830151015180516020909101207fc16646301c7615357b8f8ee125956b0e5fbf972fa2a0c26feb1f1ae75d04103f14610adb5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420612076616c69642056444e532068617264636f646564206b65790000604482015260640161014f565b610c7f565b610ae8610e67565b15610bb65760408083015181015190516381e4c9a360e01b815273565dca92902ea0ca597b5e62df0b47886b6b7d4d916381e4c9a391610b2b9190600401611692565b602060405180830381865afa158015610b46573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6a9190611641565b610adb5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420612076616c69642056444e53207075626c6963206b65790000000000604482015260640161014f565b60408083015181015190516381e4c9a360e01b815273c4e4dc291a5c4debe9ff5a3372f3fdd2e42bac86916381e4c9a391610bf49190600401611692565b602060405180830381865afa158015610c0f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c339190611641565b610c7f5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420612076616c69642056444e53207075626c6963206b65790000000000604482015260640161014f565b5f80610ca073f4e4fdca9d5d55e64525e314391996a15f7ec60060016116a4565b6001600160a01b031684604051602001610cba9190611703565b60408051601f1981840301815290829052610cd49161161f565b5f60405180830381855afa9150503d805f8114610d0c576040519150601f19603f3d011682016040523d82523d5f602084013e610d11565b606091505b5091509150610d208282610ecd565b505f81806020019051810190610d3691906117f4565b95945050505050565b60605f80610d6273f4e4fdca9d5d55e64525e314391996a15f7ec60060116116a4565b6001600160a01b0316604051806040016040528087815260200186815250604051602001610d9091906118dc565b60408051601f1981840301815290829052610daa9161161f565b5f60405180830381855afa9150503d805f8114610de2576040519150601f19603f3d011682016040523d82523d5f602084013e610de7565b606091505b5091509150610df68282610ecd565b5080806020019051810190610e0b919061192a565b925050505b92915050565b5f81518351148015610915575081805190602001208380519060200120149392505050565b610e43610fce565b610e4b610fce565b919050565b5f610e59610ee9565b806108185750610818610eff565b5f4660011480610e77575046600a145b80610e825750466089145b80610e8e575046610144145b80610e9a5750466101e0145b80610ea6575046612105145b80610eb257504661a4b1145b80610ebe57504661a4ba145b8061081857505061e708461490565b606082610ee257610edd82610fa5565b610e10565b5080610e10565b5f46617a69148061081857505062049919461490565b5f8080610f2173f4e4fdca9d5d55e64525e314391996a15f7ec600601e6116a4565b6001600160a01b03166040515f60405180830381855afa9150503d805f8114610f65576040519150601f19603f3d011682016040523d82523d5f602084013e610f6a565b606091505b5091509150811580610f7b57508051155b15610f88575f9250505090565b5f81806020019051810190610f9d9190611641565b949350505050565b805115610fb55780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060800160405280610fe1611037565b81526020015f81526020015f81526020016110326040518060a001604052805f6001600160a01b031681526020015f6001600160e01b03191681526020015f81526020015f81526020015f81525090565b905290565b60408051606081019091525f81526020810161105161105c565b81526020015f905290565b6040518061010001604052806008906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156110b1576110b161107b565b60405290565b604051608081016001600160401b03811182821017156110b1576110b161107b565b604051601f8201601f191681016001600160401b03811182821017156111015761110161107b565b604052919050565b5f6001600160401b038211156111215761112161107b565b50601f01601f191660200190565b5f82601f83011261113e575f5ffd5b8135602083015f61115661115184611109565b6110d9565b9050828152858383011115611169575f5ffd5b828260208301375f92810160200192909252509392505050565b5f60208284031215611193575f5ffd5b81356001600160401b038111156111a8575f5ffd5b610f9d8482850161112f565b5f602082840312156111c4575f5ffd5b81356001600160401b038111156111d9575f5ffd5b820160608185031215610915575f5ffd5b634e487b7160e01b5f52602160045260245ffd5b805180516001600160e01b03191683526020808201519084015f5b6008811015611238578251825260209283019290910190600101611219565b505050604001516002811061124f5761124f6111ea565b61012083015260208181015161014084015260408083015161016085015260609283015180516001600160a01b0316610180860152918201516001600160e01b0319166101a08501528101516101c0840152908101516101e08301526080015161020090910152565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6112f081846111fe565b6102406102208201525f82516003811061130c5761130c6111ea565b61024083015260208301516001600160a01b0316610260830152604083015160a06102808401526113416102e08401826112b8565b9050606084015161023f19848303016102a085015261136082826112b8565b91505060808401516102c0840152809150509392505050565b5f60208284031215611389575f5ffd5b5035919050565b6102208101610e1082846111fe565b5f5f604083850312156113b0575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610e1057610e106113bf565b80820180821115610e1057610e106113bf565b634e487b7160e01b5f52603260045260245ffd5b805160208201516bffffffffffffffffffffffff1981169190601482101561145d576bffffffffffffffffffffffff196bffffffffffffffffffffffff198360140360031b1b82161692505b5050919050565b80356001600160401b0381168114610e4b575f5ffd5b5f6060828403121561148a575f5ffd5b61149261108f565b905061149d82611464565b815260208201356001600160401b038111156114b7575f5ffd5b6114c38482850161112f565b60208301525060408201356001600160401b038111156114e1575f5ffd5b6114ed8482850161112f565b60408301525092915050565b5f60608236031215611509575f5ffd5b61151161108f565b82356001600160401b03811115611526575f5ffd5b6115323682860161112f565b82525060208301356001600160401b0381111561154d575f5ffd5b8301608036829003121561155f575f5ffd5b6115676110b7565b81356001600160401b0381111561157c575f5ffd5b6115883682850161112f565b825250602082013560ff8116811461159e575f5ffd5b602082015260408201356001600160401b038111156115bb575f5ffd5b6115c73682850161112f565b6040830152506115d960608301611464565b606082015260208301525060408301356001600160401b038111156115fc575f5ffd5b6114ed3682860161147a565b5f81518060208401855e5f93019283525090919050565b5f6109158284611608565b5f6020828403121561163a575f5ffd5b5051919050565b5f60208284031215611651575f5ffd5b81518015158114610915575f5ffd5b60ff8281168282160390811115610e1057610e106113bf565b60ff8181168382160190811115610e1057610e106113bf565b602081525f61091560208301846112b8565b6001600160a01b038181168382160190811115610e1057610e106113bf565b6001600160401b0381511682525f6020820151606060208501526116ea60608501826112b8565b905060408301518482036040860152610e0b82826112b8565b602081525f82516060602084015261171e60808401826112b8565b90506020840151601f1984830301604085015280516080835261174460808401826112b8565b905060ff60208301511660208401526040820151838203604085015261176a82826112b8565b9150506001600160401b03606083015116606084015260408601519250601f1985820301606086015261179d81846116c3565b9695505050505050565b5f82601f8301126117b6575f5ffd5b81516117c461115182611109565b8181528460208386010111156117d8575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f60208284031215611804575f5ffd5b81516001600160401b03811115611819575f5ffd5b82016080818503121561182a575f5ffd5b6118326110b7565b81516001600160401b03811115611847575f5ffd5b611853868285016117a7565b82525060208201516001600160401b0381111561186e575f5ffd5b61187a868285016117a7565b60208301525060408201516001600160401b03811115611898575f5ffd5b6118a4868285016117a7565b60408301525060608201516001600160401b038111156118c2575f5ffd5b6118ce868285016117a7565b606083015250949350505050565b60208082525f906060830190830184835b600281101561191f57601f1986850301835261190a8483516112b8565b935060209283019291909101906001016118ed565b509195945050505050565b5f6020828403121561193a575f5ffd5b81516001600160401b0381111561194f575f5ffd5b8201601f8101841361195f575f5ffd5b80516001600160401b038111156119785761197861107b565b8060051b611988602082016110d9565b918252602081840181019290810190878411156119a3575f5ffd5b6020850192505b838310156119e85782516001600160401b038111156119c7575f5ffd5b6119d6896020838901016117a7565b835250602092830192909101906119aa565b97965050505050505056fe5e5265676973746572206f7267616e697a6174696f6e20285b5e5c735d2b283f3a5c732b5b5e5c735d2b292a292061732028484f53504954414c7c494e53555245522920776974682077616c6c65743a202830785b612d66412d46302d395d7b34307d29245e5b5c772e2d5d2b40285b612d7a412d5a5c642e2d5d2b5c2e5b612d7a412d5a5d7b322c7d29245e52656769737465722070617469656e7420776974682077616c6c65743a202830785b612d66412d46302d395d7b34307d2924a26469706673582212203f3c202f33a088bf3e5c308659fcd1b2da22b3724d8297e7fdfe3d0f3aa9669064736f6c634300081c0033";

type HealthcareRegistrationProverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthcareRegistrationProverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthcareRegistrationProver__factory extends ContractFactory {
  constructor(...args: HealthcareRegistrationProverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HealthcareRegistrationProver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HealthcareRegistrationProver__factory {
    return super.connect(runner) as HealthcareRegistrationProver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthcareRegistrationProverInterface {
    return new Interface(_abi) as HealthcareRegistrationProverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HealthcareRegistrationProver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HealthcareRegistrationProver;
  }
}
